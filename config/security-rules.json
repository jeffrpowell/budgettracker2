{
  "rules": {
    ".read": false,
    ".write": false,
    "account_category": {
      "bank": {
        ".read": "auth.id !== null",
        ".write": "auth.id !== null",
        "$account_category_id": {
          ".validate": "!data.exists() && newData.hasChildren(['name'])",
          "name": {".validate": "newData.isString() && newData.val().length > 0"},
          "accounts": {".validate": "root.child('account/' + newData.val()).exists()"},
          "$other": { ".validate": false }
        }
      },
      "expense": {
        ".read": "auth.id !== null",
        ".write": "auth.id !== null",
        "$account_category_id": {
          ".validate": "newData.hasChildren(['name'])",
          "name": {".validate": "newData.isString() && newData.val().length > 0"},
          "accounts": {".validate": "root.child('account/' + newData.val()).exists()"},
          "$other": { ".validate": false }
        } 
      },
      "income": {
        ".read": "auth.id !== null",
        ".write": "auth.id !== null",
        "$account_category_id": {
          ".validate": "newData.hasChildren(['name'])",
          "name": {".validate": "newData.isString() && newData.val().length > 0"},
          "accounts": {".validate": "root.child('account/' + newData.val()).exists()"},
          "$other": { ".validate": false }
        }
      }
    },
    "account": {
      ".read": "auth.id !== null",
      ".write": "auth.id !== null",
      "$account_category_id":{
        ".validate": "root.child('account_category/expense' + $account_category_id).exists() || root.child('account_category/income' + $account_category_id).exists() || root.child('account_category/bank' + $account_category_id).exists()",
        "$account_id": {
          ".validate": "newData.hasChildren(['name', 'balance', 'category', 'goal_account'])",
          "name": {".validate": "newData.isString() && newData.val().length > 0"},
          "balance": {".validate": "newData.isNumber()"},
          "goal": {".validate": "newData.isNumber()"},
          "goal_account": {".validate": "newData.isBoolean()"},
          "parent_account": {".validate": "root.child('account/'+newData.val()).exists()"},
          "$other": { ".validate": false }
        }
      }
    },
    "transaction": {
      ".read": "auth.id !== null",
      ".write": "auth.id !== null",
      "$transaction_id": {
        ".validate": "newData.hasChildren(['date', 'amount', 'projection', 'memo'])",
        // dates in the format YYYY-MM-DD between the years 1900-2099
        "date": {".validate": "newData.isString() && newData.val().matches(/^(19|20)[0-9][0-9][-\\/. ](0[1-9]|1[012])[-\\/. ](0[1-9]|[12][0-9]|3[01])$/)"},
        "accounts": {
          "from": {".validate": "root.child('account/'+newData.val()).exists()"},
          "to": {".validate": "root.child('account/'+newData.val()).exists()"},
          "$other": {".validate": false}
        },
        "amount": {".validate": "newData.isNumber()"},
        "projection": {".validate": "newData.isBoolean()"},
        "memo": {".validate": "newData.isString()"},
        "$other": { ".validate": false }
      }
    }
  }
}